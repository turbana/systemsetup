#+TITLE: System Setup
#+STARTUP: content

Provide complete workstation provisioning through ansible.

To bootstrap from a fresh Debian install run the following as root:
#+BEGIN_SRC shell :tangle no
  wget -q https://raw.githubusercontent.com/turbana/systemsetup/master/bootstrap.sh && sh bootstrap.sh
#+END_SRC

* Todo
** TODO emacs from source
** TODO spacemacs
** TODO custom symlinks
** TODO hostname
** TODO auto login
** TODO python virtualenv / libraries
** TODO setup new ssh key + load into github
** TODO setup sudoers
* Initial
** Bootstrap
Before we can begin our Ansible playbook we need to do the following:
1. install ansible
2. install git
3. initialize ssh key
4. load ssh key into github

bootstrap.sh
#+BEGIN_SRC shell :tangle bootstrap.sh :tangle-mode (identity #o755)
  #!/bin/sh

  set -e

  GIT_REPO=https://github.com/turbana/systemsetup.git
  SOURCES=/etc/apt/sources.list
  TMP_SOURCES=/tmp/$$.sources.list

  if [ "$#" = "1" ]; then
      USER=$1
  else
      echo " * finding user"
      USER=$(id -un 1000)
  fi
  if [ -z "$USER" ]; then
      echo "ERROR: could not determine user; run '$(basename $0) <user>'"
      exit 2
  fi

  echo " * user is $USER"

  # add ansible repo
  if ! grep -q ansible $SOURCES; then
      echo " * add ansible apt repository"
      cp $SOURCES $TMP_SOURCES
      echo >> $TMP_SOURCES
      echo "# ansible repo" >> $TMP_SOURCES
      echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> $TMP_SOURCES
      mv $TMP_SOURCES $SOURCES
  fi

  # dirmngr needed for apt-key
  echo " * install dirmngr"
  apt-get install -y dirmngr > /dev/null

  echo " * add ansible public apt key"
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367 > /dev/null

  echo " * update packages"
  apt-get update > /dev/null

  echo " * install ansible/git/sudo"
  apt-get install -y ansible python git sudo > /dev/null

  if [ ! -f $HOME/id_ecdsa ]; then
      echo " * generate ssh key"
      sudo -u $USER ssh-keygen -f /home/$USER/.ssh/id_ecdsa -t ecdsa -b 521
      echo " * MANUALLY add the public key to github"
      cat /home/$USER/.ssh/id_ecdsa.pub
      echo "Press enter to continue..."
      read ignore
  fi

  echo " * start ansible"
  ansible-pull -U $GIT_REPO -e user=$USER
#+END_SRC
** Ansible
local.yml
#+BEGIN_SRC yaml :tangle local.yml
  - hosts: localhost
    become: true
    pre_tasks:
      # XXX skip updating repos while testing
      # - name: update repositories
      #   apt: update_cache=yes
      #   changed_when: False

    tasks:
      - import_tasks: tasks/apt_repos.yml
      - import_tasks: tasks/packages.yml
      - import_tasks: tasks/git.yml
        become_user: "{{ user }}"
#+END_SRC

* Tasks
** Apt Repositories
tasks/apt_repos.yml
#+BEGIN_SRC yaml :tangle tasks/apt_repos.yml
  - name: add google apt signing key
    apt_key:
      url: https://dl-ssl.google.com/linux/linux_signing_key.pub
      state: present

  - name: add google chrome apt repo
    apt_repository:
      repo: deb http://dl.google.com/linux/chrome/deb/ stable main
      state: present
      update_cache: yes
#+END_SRC
** Packages
tasks/packages.yml
*** System
#+BEGIN_SRC yaml :tangle tasks/packages.yml
  - name: install system packages
    apt: name={{item}}
    with_items:
      - linux-headers-amd64
      - gcc
      - perl
#+END_SRC
*** Utility
#+BEGIN_SRC yaml :tangle tasks/packages.yml
  - name: install utility packages
    apt: name={{item}}
    with_items:
      - curl
      - screen
#+END_SRC

*** xmonad
#+BEGIN_SRC yaml :tangle tasks/packages.yml
  - name: install xmonad packages
    apt: name={{item}}
    with_items:
      - libx11-dev
      - libxrandr2
      - libxrandr-dev
      - ghc
      - xmonad
      - cabal-install
      - dmenu
      - dzen2
      - xclip
#+END_SRC

*** Google chrome
#+BEGIN_SRC yaml :tangle tasks/packages.yml
  - name: install google chrome packages
    apt: name={{item}}
    with_items:
      # - libgif-dev
      # - libgnutls28-dev
      - google-chrome-stable
#+END_SRC

*** Python
#+BEGIN_SRC yaml :tangle tasks/packages.yml
  - name: install python packages
    apt: name={{item}}
    with_items:
      - python-pip
#+END_SRC
** Git
#+BEGIN_SRC yaml :tangle tasks/git.yml
  - name: add github.com to known_hosts
    known_hosts:
      name: github.com
      key: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="

  - name: checkout dotfiles repo
    git:
      repo: git@github.com:turbana/dotfiles.git
      dest: ~/.etc
#+END_SRC
