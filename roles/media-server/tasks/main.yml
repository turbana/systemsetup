- name: Setup systcl tweaks
  ansible.builtin.copy:
    src: files/sysctl.conf
    dest: /etc/sysctl.conf
    mode: 0644

- name: Ensure group {{ media_group }} exists
  ansible.builtin.group:
    name: "{{ media_group }}"
    state: present

- name: Ensure user {{ docker_user }} has group {{ media_group }}
  ansible.builtin.user:
    name: "{{ docker_user }}"
    groups: "{{ media_group }}"
    append: true

- name: Create media root directories
  ansible.builtin.file:
    dest: "{{ media_files_root }}/{{ item }}"
    state: directory
    group: "{{ media_group }}"
    mode: "2770"
  loop:
    - tv
    - movies
    - music
    - books

- name: Create download directories
  ansible.builtin.file:
    dest: "{{ media_download_root }}/{{ item }}"
    state: directory
    group: "{{ media_group }}"
    mode: "2770"
  loop:
    - torrents
    - nzbs

- name: Create docker root directory
  ansible.builtin.file:
    dest: "{{ docker_root }}"
    state: directory
    owner: "{{ docker_user }}"
    group: "{{ docker_group }}"
    mode: "0750"

- name: Create container directories
  ansible.builtin.file:
    dest: "{{ docker_app_root }}/{{ item.key }}"
    state: directory
  loop: "{{ docker_services | dict2items }}"
    
- name: Copy docker main compose file
  become: false
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: "{{ docker_root }}/docker-compose.yml"
    mode: 0640

- name: Copy docker services compose files
  become: false
  ansible.builtin.template:
    src: templates/{{ item.key }}.yml.j2
    dest: "{{ docker_root }}/{{ item.key }}.yml"
    mode: 0640
  loop: "{{ docker_services | dict2items }}"
  
- name: Create app config directories
  # no_log: true
  ansible.builtin.file:
    path: "{{ docker_app_root }}/{{ item.path }}"
    state: directory
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_community.general.filetree: ../configs
  when: item.state == "directory"
  loop_control:
    label: "{{ item.path }}"

- name: Copy app config template files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ docker_app_root }}/{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_community.general.filetree: ../configs
  when: item.state == "file"
  loop_control:
    label: "{{ item.path }}"

- name: Recreate app config symlinks
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ docker_app_root }}/{{ item.path }}"
    state: link
    # avoid corrupting target files if the link already exists
    follow: false
    force: true
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_community.general.filetree: ../configs
  when: item.state == "link"
  loop_control:
    label: "{{ item.path }}"

- name: Start all docker containers
  community.docker.docker_compose_v2:
    project_src: "{{ docker_root }}"
    files: "docker-compose.yml"
    state: present
