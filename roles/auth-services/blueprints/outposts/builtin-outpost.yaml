version: 1
metadata:
  name: Outposts - Main Outpost
  context: {}
entries:
#~~~~~~~~~~~~~~~~~~~~~~~~~~~ Dependency blueprints ~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_blueprints.metaapplyblueprint
  attrs:
    identifiers:
      name: Applications - Site Providers
    required: true

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Outposts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
- model: authentik_outposts.outpost
  identifiers:
    name: authentik Embedded Outpost
  attrs:
    type: proxy
    config:
      log_level: info
      docker_labels: null
      authentik_host: {{ docker_services["authentik-server"].proxy.base }}
      docker_network: null
      container_image: null
      docker_map_ports: true
      refresh_interval: minutes=5
      kubernetes_replicas: 1
      kubernetes_namespace: default
      authentik_host_browser: ""
      object_naming_template: ak-outpost-%(name)s
      authentik_host_insecure: false
      kubernetes_json_patches: null
      kubernetes_service_type: ClusterIP
      kubernetes_image_pull_secrets: []
      kubernetes_ingress_class_name: null
      kubernetes_disabled_components: []
      kubernetes_ingress_annotations: {}
      kubernetes_ingress_secret_name: authentik-outpost-tls
    providers:
{% for app in authentik.applications %}
{% set provider_type = app.provider_type | default("proxy") %}
{% if provider_type == "oauth2" %}
      - !Find [authentik_providers_oauth2.oauth2provider, [name, 'Provider for {{ app.name }}']]
{% elif provider_type == "proxy" %}
      - !Find [authentik_providers_proxy.proxyprovider, [name, 'Provider for {{ app.name }}']]
{% else %}
      - "ERROR: unknown application provider_type found in authentik.applications.{{ app.name }}.provider_type: {{ provider_type }}"
{% endif %}
{% endfor %}
